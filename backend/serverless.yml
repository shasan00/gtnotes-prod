service: gtnotes-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  environment:
    NODE_ENV: ${self:provider.stage}
    DATABASE_URL: ${env:DATABASE_URL, ''}
    BETTER_AUTH_SECRET: ${env:BETTER_AUTH_SECRET, ''}
    BETTER_AUTH_URL: ${env:BETTER_AUTH_URL, 'https://7m66fwf69g.execute-api.us-east-2.amazonaws.com/production'}
    JWT_SECRET: ${env:JWT_SECRET, 'dev-jwt-secret'}
    SESSION_SECRET: ${env:SESSION_SECRET, 'dev-session-secret'}
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID, ''}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET, ''}
    MICROSOFT_CLIENT_ID: ${env:MICROSOFT_CLIENT_ID, ''}
    MICROSOFT_CLIENT_SECRET: ${env:MICROSOFT_CLIENT_SECRET, ''}
    AWS_S3_BUCKET: ${env:AWS_S3_BUCKET, 'dev-bucket'}
    MICROSOFT_TENANT_ID: ${env:MICROSOFT_TENANT_ID, ''}
    MICROSOFT_REDIRECT_URI: ${env:MICROSOFT_REDIRECT_URI, ''}
    FRONTEND_URL: ${env:FRONTEND_URL, 'http://localhost:8080'}
  vpc:
    securityGroupIds:
      - sg-0ac0c57dc09c71bc0
    subnetIds:
      - subnet-0caa5c85eb6de0ae8
      - subnet-0af07f950c9e16d66
      - subnet-01c07ae91d3a72b23
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::${env:AWS_S3_BUCKET, 'dev-bucket'}/*"

functions:
  api:
    handler: src/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origins:
              - ${env:FRONTEND_URL, 'http://localhost:8080'}
              - 'https://main.d2rs71o2mqiojg.amplifyapp.com'
              - 'https://d2rs71o2mqiojg.amplifyapp.com'
            headers:
              - Content-Type
              - Authorization
              - X-Requested-With
              - Accept
              - Origin
              - Referer
              - User-Agent
              - Accept-Language
              - Content-Language
            allowCredentials: true
    timeout: 60
    memorySize: 1024

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  typescript:
    configPath: './tsconfig.serverless.json'
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_REGION
      - RDS_CA_BASE64

package:
  patterns:
    - 'src/db/us-east-2-bundle.pem'
