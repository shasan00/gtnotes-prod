service: gtnotes-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    NODE_ENV: ${self:provider.stage}
    DATABASE_URL: ${env:DATABASE_URL, ''}
    JWT_SECRET: ${env:JWT_SECRET, 'dev-jwt-secret'}
    SESSION_SECRET: ${env:SESSION_SECRET, 'dev-session-secret'}
    GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID, ''}
    GOOGLE_CLIENT_SECRET: ${env:GOOGLE_CLIENT_SECRET, ''}
    MICROSOFT_CLIENT_ID: ${env:MICROSOFT_CLIENT_ID, ''}
    MICROSOFT_CLIENT_SECRET: ${env:MICROSOFT_CLIENT_SECRET, ''}
    AWS_S3_BUCKET: ${env:AWS_S3_BUCKET, 'dev-bucket'}
    AWS_REGION: ${env:AWS_REGION, 'us-east-1'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::${env:AWS_S3_BUCKET, 'dev-bucket'}/*"

functions:
  api:
    handler: src/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    timeout: 30
    memorySize: 512

plugins:
  - serverless-plugin-typescript
  - serverless-offline

custom:
  typescript:
    configPath: './tsconfig.serverless.json'
  serverless-offline:
    httpPort: 4000
    noPrependStageInUrl: true
